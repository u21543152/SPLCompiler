package parser;

import com.splcompiler.lexer.RecSPLLexer;
import com.splcompiler.lexer.Token;
import com.splcompiler.parser.ASTNode;
import com.splcompiler.parser.XMLSyntaxTreeWriter;
import com.splcompiler.parser.lexerXMLParser;
import com.splcompiler.parser.parser;

import java.util.List;

public class ParserTest {
    public static void main(String[] args) {
// Step 1: Read tokens from the XML file
        String lexerOutputFile = "SPLCompiler/compiler/src/main/resources/output.xml";  // This is the XML file generated by the lexer
        List<Token> tokens = lexerXMLParser.readTokensFromXML(lexerOutputFile);

        // Step 2: Parse the tokens to create an AST
        parser parser = new parser(tokens);
        ASTNode programNode = parser.parseProgram();

        // Step 3: Write the AST to the XML tree format
        String syntaxTreeOutputFile = "SPLCompiler/compiler/src/main/resources/syntax_tree.xml";
        XMLSyntaxTreeWriter.writeSyntaxTree(programNode, syntaxTreeOutputFile);
        // Optionally, traverse the AST to print it or analyze it
    }
}
